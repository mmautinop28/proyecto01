# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

#input {
#  beats {
#    port => 5044
#  }
#}

input {
  file {
    type => "java"
    path => "d:/tmp/elk/spring-boot-elk-demo-1.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
  }
  file {
    type => "java"
    path => "d:/tmp/elk/spring-boot-elk-demo-2.log"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
  }
}

filter {

#  #Si el log contiene un tab seguido de 'at' debe generar un stacktrace 
#  if [message] =~ "\tat" {
#    grok {
#      match => ["message", "^(\tat)"]
#      add_tag => ["stacktrace"]
#    }
#  }

	grok {
		  match => [
		  "message", "%{DATA:microservicio} %{TIMESTAMP_ISO8601:fechahora} %{LOGLEVEL:nivel} %{DATA:clase} %{DATA:metodo} %{DATA:proceso} %{GREEDYDATA:message}"]		  
		  
		  overwrite => ["message"]	  
	}
}
#%{WORD:correlativo} %{URIPATH:request}(?:%{URIPARAM:requestparam})? 
output {
   
  stdout {
    codec => rubydebug
  }
 
  # Sending properly parsed log events to elasticsearch
  elasticsearch {
    hosts => ["localhost:9200"]
#	index => "logstash-2021.06.12-000001"

  }
}

#output {
#  elasticsearch {
#    hosts => ["http://localhost:9200"]
#    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
#    #user => "elastic"
#    #password => "changeme"
#  }
#}
